{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"Login\",\n  data() {\n    var validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      staffForm: {\n        account: '',\n        password: ''\n      },\n      rules: {\n        password: [{\n          validator: validatePassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n    props: [];\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          axios.post('/em/login', {\n            \"accountId\": this.staffForm.account,\n            \"password\": this.staffForm.password\n          }).then(res => {\n            if (res.data.data === null) {\n              alert('账号或密码输入错误');\n            } else {}\n          }).catch(err => {\n            console.error(err);\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","validatePassword","rule","value","callback","Error","staffForm","account","password","rules","validator","trigger","props","methods","submitForm","formName","$refs","validate","valid","post","then","res","alert","catch","err","console","error","log","resetForm","resetFields"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n    <el-container>\r\n        <el-header>\r\n            <el-row>\r\n                <el-col>员工管理系统</el-col>\r\n            </el-row>\r\n        </el-header>\r\n\r\n        <el-main>\r\n            <el-form :model=\"staffForm\" :rules=\"rules\" ref=\"staffForm\" status-icon>\r\n                <el-form-item label=\"账户\" prop=\"account\">\r\n                    <el-input type=\"text\" v-model=\"staffForm.account\" ></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input type=\"password\" v-model=\"staffForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button @click=\"submitForm('staffForm')\" type=\"primary\">登录</el-button>\r\n                    <el-button @click=\"resetForm('staffForm')\" type=\"warning\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-main>\r\n        <el-footer>\r\n        </el-footer>\r\n    </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    name: \"Login\",\r\n    data() {\r\n        var validatePassword = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            staffForm:{\r\n                account:'',\r\n                password:''\r\n            },\r\n            rules:{\r\n                password: [\r\n                    { validator: validatePassword, trigger: 'blur' }\r\n                ],\r\n            },\r\n        };\r\n        props:[]\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    axios.post('/em/login',{\r\n                        \"accountId\": this.staffForm.account,\r\n                        \"password\": this.staffForm.password,\r\n                    })\r\n                    .then(res => {\r\n                        if (res.data.data === null) {\r\n                            alert('账号或密码输入错误')\r\n                        }else{\r\n\r\n                        }\r\n                        \r\n                    })\r\n                    .catch(err => {\r\n                        console.error(err); \r\n                    })\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    },\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":"AA4BA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA,IAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,SAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAD,QAAA,GACA;UAAAE,SAAA,EAAAT,gBAAA;UAAAU,OAAA;QAAA;MAEA;IACA;IACAC,KAAA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACApB,KAAA,CAAAqB,IAAA;YACA,kBAAAb,SAAA,CAAAC,OAAA;YACA,iBAAAD,SAAA,CAAAE;UACA,GACAY,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAArB,IAAA,CAAAA,IAAA;cACAsB,KAAA;YACA,QAEA;UAEA,GACAC,KAAA,CAAAC,GAAA;YACAC,OAAA,CAAAC,KAAA,CAAAF,GAAA;UACA;QACA;UACAC,OAAA,CAAAE,GAAA;UACA;QACA;MACA;IACA;IACAC,UAAAb,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAc,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
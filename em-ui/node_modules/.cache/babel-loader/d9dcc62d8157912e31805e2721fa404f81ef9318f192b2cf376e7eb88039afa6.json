{"ast":null,"code":"export default {\n  name: \"Login\",\n  data() {\n    var validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.staffForm.checkPass !== '') {\n          this.$refs.staffForm.validateField('password');\n        }\n        callback();\n      }\n    };\n    return {\n      staffForm: {\n        account: '',\n        password: ''\n      },\n      staffRules: {\n        password: [{\n          validator: validatePassword,\n          trigger: 'blur',\n          message: '请输入密码'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      console.log(this.$refs[formName]);\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      console.log(this.$refs[formName]);\n      console.log(this.$refs[formName].validate());\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePassword","rule","value","callback","Error","staffForm","checkPass","$refs","validateField","account","password","staffRules","validator","trigger","message","methods","submitForm","formName","console","log","validate","valid","alert","resetForm","resetFields"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n    <el-container>\r\n        <el-header>\r\n            <el-row>\r\n                <el-col>员工管理系统</el-col>\r\n            </el-row>\r\n        </el-header>\r\n\r\n        <el-main>\r\n            <el-form :model=\"staffForm\" status-icon :rules=\"staffRules\" ref=\"staffForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                <el-form-item label=\"账户\" prop=\"account\">\r\n                    <el-input type=\"text\" v-model=\"staffForm.account\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input type=\"password\" v-model=\"staffForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitForm('staffForm')\">提交</el-button>\r\n                    <el-button @click=\"resetForm('staffForm')\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-main>\r\n        <el-footer>\r\n\r\n        </el-footer>\r\n    </el-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Login\",\r\n    data() {\r\n        var validatePassword = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                if (this.staffForm.checkPass !== '') {\r\n                    this.$refs.staffForm.validateField('password');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            staffForm: {\r\n                account: '',\r\n                password: '',\r\n            },\r\n            staffRules: {\r\n                password: [\r\n                    { validator: validatePassword, trigger: 'blur', message: '请输入密码', }\r\n                ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            console.log(this.$refs[formName]);\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    alert('submit!');\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            console.log(this.$refs[formName]);\r\n            console.log(this.$refs[formName].validate());\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped></style>"],"mappings":"AA6BA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,SAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,SAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA;MACAE,SAAA;QACAI,OAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAD,QAAA,GACA;UAAAE,SAAA,EAAAZ,gBAAA;UAAAa,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACAC,OAAA,CAAAC,GAAA,MAAAZ,KAAA,CAAAU,QAAA;MACA,KAAAV,KAAA,CAAAU,QAAA,EAAAG,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAJ,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAI,UAAAN,QAAA;MACAC,OAAA,CAAAC,GAAA,MAAAZ,KAAA,CAAAU,QAAA;MACAC,OAAA,CAAAC,GAAA,MAAAZ,KAAA,CAAAU,QAAA,EAAAG,QAAA;MACA,KAAAb,KAAA,CAAAU,QAAA,EAAAO,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}